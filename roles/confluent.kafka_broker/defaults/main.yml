---
# More kafka_broker variables are defined in the confluent.variables role

### Boolean to enable cp-ansible's Custom Log4j Configuration
kafka_broker_custom_log4j: "{{ custom_log4j }}"

kafka_broker_java_args:
  - "{% if kafka_broker_listeners | ssl_required(ssl_enabled) | bool %}-Djdk.tls.ephemeralDHKeySize=2048{% endif %}"
  - "{% if 'GSSAPI' in kafka_broker_sasl_enabled_mechanisms or zookeeper_sasl_protocol in ['kerberos', 'digest'] %}-Djava.security.auth.login.config={{kafka_broker.jaas_file}}{% endif %}"
  - "{% if kafka_broker_jolokia_enabled|bool %}-javaagent:{{jolokia_jar_path}}=config={{kafka_broker_jolokia_config}}{% endif %}"
  - "{% if kafka_broker_jmxexporter_enabled|bool %}-javaagent:{{jmxexporter_jar_path}}={{kafka_broker_jmxexporter_port}}:{{kafka_broker_jmxexporter_config_path}}{% endif %}"
  - "{% if zookeeper_sasl_protocol == 'kerberos' and zookeeper_kerberos_primary != 'zookeeper' %}-Dzookeeper.sasl.client.username={{zookeeper_kerberos_primary}}{% endif %}"

# Strip primary from the zookeeper principal on first zk host. Adds defaults for if there is not even a zookeeper group
zookeeper_kerberos_primary: "{{ (hostvars[ groups['zookeeper'][0] | default('zookeeper') ] | default({})) ['zookeeper_kerberos_principal'] | default('zookeeper/host@EXAMPLE>COM') | regex_replace('/.*') }}"

### Custom Java Args to add to the Kafka Process
kafka_broker_custom_java_args: ""

kafka_broker_final_java_args: "{{ kafka_broker_java_args + [ kafka_broker_custom_java_args ] }}"

# Key/Value Pairs with empty values will not be written into override.conf
kafka_broker_service_overrides:
  User: "{{ kafka_broker_user if kafka_broker_user != kafka_broker_default_user else '' }}"
  Group: "{{ kafka_broker_group if kafka_broker_group != kafka_broker_default_group else '' }}"
  ExecStart: "{% if installation_method == 'archive' %}{{ kafka_broker.server_start_file }} {{ kafka_broker.config_file }}{% endif %}"

kafka_broker_service_environment_overrides:
  KAFKA_HEAP_OPTS: "-Xms6g -Xmx6g -XX:MetaspaceSize=96m -XX:+UseG1GC -XX:MaxGCPauseMillis=20 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=16M -XX:MinMetaspaceFreeRatio=50 -XX:MaxMetaspaceFreeRatio=80"
  KAFKA_OPTS: "{{ kafka_broker_final_java_args | java_arg_build_out }}"
  KAFKA_LOG4J_OPTS: "{% if kafka_broker_custom_log4j|bool %}-Dlog4j.configuration=file:{{kafka_broker.log4j_file}}{% endif %}"
  LOG_DIR: "{% if kafka_broker_custom_log4j|bool %}{{kafka_broker.appender_log_path}}{% endif %}"
  CONFLUENT_SECURITY_MASTER_KEY: "{% if kafka_broker_secrets_protection_enabled|bool %}{{secrets_protection_masterkey}}{% endif %}"

kafka_broker_sysctl:
  vm.swappiness: 1
  vm.dirty_background_ratio: 5
  vm.dirty_ratio: 80

kafka_broker_sysctl_file: /etc/sysctl.conf

kafka_broker:
  appender_log_path: /var/log/kafka/
  kafka_appender_log_name: server.log
  kafka_appender_max_log_files: 10
  kafka_appender_log_file_size: 100MB
  state_change_appender_log_name: state-change.log
  state_change_appender_max_log_files: 10
  state_change_appender_log_file_size: 100MB
  request_appender_log_name: kafka-request.log
  request_appender_max_log_files: 10
  request_appender_log_file_size: 100MB
  cleaner_appender_log_name: log-cleaner.log
  cleaner_appender_max_log_files: 10
  cleaner_appender_log_file_size: 100MB
  controller_appender_log_name: controller.log
  controller_appender_max_log_files: 10
  controller_appender_log_file_size: 100MB
  authorizer_appender_log_name: kafka-authorizer.log
  authorizer_appender_max_log_files: 10
  authorizer_appender_log_file_size: 100MB
  metadata_appender_log_name: metadata.log
  metadata_appender_max_log_files: 10
  metadata_appender_log_file_size: 100mb
  systemd_file: /usr/lib/systemd/system/{{kafka_broker_service_name}}.service
  systemd_override: /etc/systemd/system/{{kafka_broker_service_name}}.service.d/override.conf
